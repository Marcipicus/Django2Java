package chord.ident;

import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import chord.Interval;
import chord.exceptions.DuplicateIntervalException;

public enum ScaleSignature {
	CHROMATIC("Chromatic",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MINOR7,
			Interval.MAJOR7),

	//Modes of the Major Pentatonic Scale
	MAJOR_PENTATONIC("Major Pentatonic",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT5,
			Interval.MAJOR6),
	//Mode 2
	SUSPENDED_PENTATONIC("Suspended Pentatonic",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR7),
	//Mode 3
	MAN_GONG("Man Gong",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.MINOR6,
			Interval.MINOR7),	
	//Mode 4
	RITUSEN("Ritusen",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6),
	//Mode 5
	MINOR_PENTATONIC("Minor Pentatonic",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR7),

	//Blues Scales
	MAJOR_BLUES("Major Blues",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT5,
			Interval.MAJOR6),
	MINOR_BLUES("Minor Blues",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR7),

	//Modes of the Major Scale
	IONIAN("Ionian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DORIAN("Dorian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	PHRYGIAN("Phrygian",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	LYDIAN("Lydian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	MIXOLYDIAN("Mixolydian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	AEOLIAN("Aeolian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	LOCRIAN("Locrian",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7),

	//Modes of the Harmonic Minor scale
	AEOLIAN_NATURAL_7("Aeolian nat 7",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR7),
	LOCRIAN_NATURAL_6("Locrian nat 6",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MAJOR6,
			Interval.MINOR7),
	IONIAN_SHARP_5("Ionian #5",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DORIAN_SHARP_4("Dorian #4",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	PHRYGIAN_NATURAL_3("Phrygian nat 3",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	LYDIAN_SHARP_2("Lydian #2",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR7),
	SUPERLOCRIAN_bb7("Superlocrian bb7",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),


	//Modes of the Melodic Minor Scale
	IONIAN_b3("Ionian b3",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DORIAN_b2("Dorian b2",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	LYDIAN_SHARP_5("Lydian #5",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	LYDIAN_b7("Lydian b7",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	MIXOLYUDIAN_b6("Mixolydian b6",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	AEOLIAN_b5("Aeolian b5",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7),
	LOCRIAN_b4("Locrian b4",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7),

	//Modes of the Melodic Minor Blues Family
	MELODIC_MINOR_BLUES("Melodic Minor Blues",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	MIXODORIAN_b9_BEBOP("Mixodorian b9 Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	LYDIAN_AUGMENTED_MINOR_BEBOP("Lydian Augmented Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	LYDIAN_DOMINANT_ADD_b9("Lydian Domininant add b9",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	LOCRYDIAN_bb7("Locrydian bb7",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	MIXIONIAN_b6("Mixionian b6",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	DORIOLIAN_b5("Doriolian b5",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MINOR7),
	ALTERED_QUINTAL_BEBOP("Altered Quintal Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),

	//Modes of the double harmonic family
	DOUBLE_HARMONIC_MAJOR("Double Harmonic Major",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR7),
	LYDIAN_SHARP_2_SHARP_6("Lydian #2 #6",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR7,
			Interval.MAJOR7),
	PHRYGIAN_b4_bb7("Phrygian b4 bb7",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6),
	HARMONIC_MINOR_SHARP_4("Harmonic Minor #4",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR7),
	MIXOLYDIAN_b5_b9("Mixolydian b5 b9",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MAJOR6,
			Interval.MINOR7),
	IONIAN_AUGMENTED_SHARP_2("Ionian Augmented #2",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	LOCRIAN_bb3_bb7("Locrian bb3 bb7",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6),

	//Symmetrical family scales
	AUGMENTED("Augmented",
			Interval.UNISON,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR7),
	DIMINISHED_WHOLE_HALF("Diminished (Whole Half)",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DIMINISHED_HALF_WHOLE("Diminished (Half Whole)",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	WHOLE_TONE("Whole Tone",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7),

	//Bebop dominant family
	MIXIONIAN("Mixionian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	DORIOLIAN("Doriolian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MINOR7),
	PHRYGIOLOCRIAN("Phrygiolocrian",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	LYDIONIAN("Lydionian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	MIXODORIAN("Mixodorian",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	PHRYGiOLIAN("Phrygiolian",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	LYDIOCRIAN("Lydiocrian",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	LOCRYDIAN("Locrydian",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7,
			Interval.MAJOR7),

	//Bebop Major Family
	MAJOR_BEBOP("Major Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DORIAN_BLUES("Dorian Blues",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	PHRYGIAN_BEBOP("Phrygian Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	LYDIAN_MINOR_BEBOP("Lydian Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	MIXOLYDIAN_ADD_b9("Mixolydian add b9",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	DIMINISHED_AUGMENTED("Diminished Augmented",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	HARMONIC_MINOR_BEBOP("Harmonic Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	LOCRIAN_DIMINISHED_BEBOP("Locrian Diminished Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MINOR7),

	//Ionian add b9 Bebop Family
	IONIAN_ADD_b9("Ionian add b9",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DIMINISHED_MAJOR_BEBOP("Diminished Major Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	DORIAN_MELODIC_BEBOP("Dorian Melodic Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	DOUBLE_PHRYGIAN_BEBOP("Double Phrygian Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MINOR7),
	LYDIAN_AUGMENTED_BEBOP("Lydian Augmenteed Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	MIXOLYDIAN_BLUES("Mixolydian Blues",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	MELODIC_MAJOR_MINOR_BEBOP("Melodic Major Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	DOUBLE_LOCRIAN_BEBOP("Double Locrian Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7),

	//Bebop Ionian Minor Family
	IONIAN_MINOR_BEBOP("Ionian Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DOUBLE_DORIAN_BEBOP("Double Dorian Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	LYDIAN_AUGMENTED_ADD_b9("Lydian Augmented add b9",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	PHRYGIAN_DIMINISHED_BEBOP("Phrygian Diminished Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	LYDIAN_DOMINANT_BEBOP("Lydian Dominant Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	MIXOLYDIAN_AUGMENTED_BEBOP("Mixolydian Augmented Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MINOR7),
	AEOLIAN_BLUES("Aeolian Blues",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	ALTERED_QUARTAL_BEBOP("Altered Quartal Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7),

	//Bebop Melodic Minor Family
	MELODIC_MINOR_BEBOP("Melodic Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	DORIAN_BLUES_b9("Dorian Blues b9",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	MAJOR_MINOR_BEBOP("Major Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MAJOR7),
	LYDIAN_DOMINANT_MINOR_BEBOP("Lydian Dominant Minor Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MINOR7),
	MELODIC_MAJOR_ADD_b9("Melodic Major add b9",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MAJOR2,
			Interval.MAJOR3,
			Interval.PERFECT4,
			Interval.PERFECT5,
			Interval.MINOR6,
			Interval.MINOR7),
	DIMINISHED_PHRYGIAN_BEBOP("Diminished Phrygian Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.PERFECT5,
			Interval.MAJOR6,
			Interval.MAJOR7),
	MINOR_MAJOR_BEBOP("Minor Major Bebop",
			Interval.UNISON,
			Interval.MAJOR2,
			Interval.MINOR3,
			Interval.PERFECT4,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MINOR7,
			Interval.MAJOR7),
	SUPERLOCRIAN_DIMINISHED_BEBOP("Superlocrian Diminished Bebop",
			Interval.UNISON,
			Interval.MINOR2,
			Interval.MINOR3,
			Interval.MAJOR3,
			Interval.DIMINISHED5,
			Interval.MINOR6,
			Interval.MAJOR6,
			Interval.MINOR7);
	
	/**
	 * Get the largest possible ordinal value for a note.
	 * @return
	 */
	public static int getLargestOrdinal() {
		return ScaleSignature.values().length-1;
	}
	
	/**
	 * Get the first scale signature that exists.
	 * @return scale signature with ordinal 0
	 */
	public static ScaleSignature firstSignature() {
		return ScaleSignature.values()[0];
	}
	
	/**
	 * Get the last scale signature that exists.
	 * @return scale signature with largest ordinal.
	 */
	public static ScaleSignature lastSignature() {
		return ScaleSignature.values()[ScaleSignature.getLargestOrdinal()];
	}

	private final String signatureText;
	private final List<Interval> intervals;

	/**
	 * Create a chord signature using the given list of intervals.
	 * THE UNISON INTERVAL MUST BE PASSED ALONG WITH THE OTHER INTERVALS
	 * THAT DEFINE THE CHORD
	 * @param signatureText text used to define signature in displayText() must not be null
	 * @param intervals list of intervals
	 * @throws DuplicateIntervalException when an interval is added twice
	 */
	private ScaleSignature(String signatureText, Interval... intervals) {
		if(signatureText == null) {
			throw new IllegalArgumentException("Signature text may not be null.");
		}

		this.signatureText = signatureText;

		int numberOfIntervals = intervals.length;
		if(numberOfIntervals < 1) {
			throw new IllegalArgumentException("Constructor must take at least one interval.");
		}

		Arrays.sort(intervals);

		Set<Interval> intervalsSet = new HashSet<Interval>(Arrays.asList(intervals));

		if(numberOfIntervals != intervalsSet.size()) {
			throw new DuplicateIntervalException("Duplicate intervals not allowed.");
		}

		//Make sure that the signature cannot be modified after creation
		this.intervals = Collections.unmodifiableList(Arrays.asList(intervals));
	}
	
	public boolean isLastSignature() {
		return ordinal() == ScaleSignature.getLargestOrdinal();
	}
	
	public boolean isFirstSignature() {
		return ordinal() == 0;
	}
	
	public ScaleSignature getPreviousScale() {
		if(this.ordinal() == 0) {
			return values()[ScaleSignature.getLargestOrdinal()];
		}else {
			return values()[this.ordinal() -1];
		}
	}
	
	public ScaleSignature getNextScale() {
			if(this.ordinal()+1 > ScaleSignature.getLargestOrdinal()) {
				return values()[0];
			}else {
				return values()[this.ordinal()+1];
			}
	}
	/**
	 * Get all of the intervals for this signature.
	 * @return
	 */
	public List<Interval> getIntervals(){
		return intervals;
	}
	
	public String displayText() {
		return signatureText;
	}
}
